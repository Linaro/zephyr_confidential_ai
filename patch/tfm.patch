diff --git a/CMakeLists.txt b/CMakeLists.txt
index 896153aab..ac45eb04e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -53,7 +53,7 @@ endif()
 include(${TFM_TOOLCHAIN_FILE})
 set(CMAKE_PROJECT_INCLUDE_BEFORE ${CMAKE_SOURCE_DIR}/cmake/disable_compiler_detection.cmake)

-project("Trusted Firmware M" VERSION ${TFM_VERSION} LANGUAGES C ASM)
+project("Trusted Firmware M" VERSION ${TFM_VERSION} LANGUAGES C CXX ASM)
 tfm_toolchain_reload_compiler()

 # Synchronise the install path variables. If CMAKE_INSTALL_PREFIX is manually
diff --git a/cmake/disable_compiler_detection.cmake b/cmake/disable_compiler_detection.cmake
index ebafca063..215221a20 100644
--- a/cmake/disable_compiler_detection.cmake
+++ b/cmake/disable_compiler_detection.cmake
@@ -7,3 +7,4 @@

 #Stop cmake running compiler tests.
 set (CMAKE_C_COMPILER_FORCED true)
+set (CMAKE_CXX_COMPILER_FORCED true)
diff --git a/platform/ext/common/gcc/tfm_common_s.ld b/platform/ext/common/gcc/tfm_common_s.ld
index 9d40da22d..d76401418 100644
--- a/platform/ext/common/gcc/tfm_common_s.ld
+++ b/platform/ext/common/gcc/tfm_common_s.ld
@@ -196,7 +196,7 @@ SECTIONS
     Image$$ER_CODE_SRAM$$Limit = ADDR(.ER_CODE_SRAM) + SIZEOF(.ER_CODE_SRAM);
 #endif

-#if TFM_LVL != 1
+/* #if TFM_LVL != 1 */
     .ARM.extab :
     {
         *(.ARM.extab* .gnu.linkonce.armextab.*)
@@ -209,7 +209,7 @@ SECTIONS
     } > FLASH
     __exidx_end = .;

-#endif /* TFM_LVL != 1 */
+/* #endif */ /* TFM_LVL != 1 */

     .ER_TFM_CODE : ALIGN(4)
     {
diff --git a/platform/ext/target/stm/b_u585i_iot02a/include/flash_layout.h b/platform/ext/target/stm/b_u585i_iot02a/include/flash_layout.h
index 7f817c650..30b26c790 100644
--- a/platform/ext/target/stm/b_u585i_iot02a/include/flash_layout.h
+++ b/platform/ext/target/stm/b_u585i_iot02a/include/flash_layout.h
@@ -119,8 +119,8 @@
 #error "FLASH_ITS_AREA_OFFSET not aligned on FLASH_AREA_IMAGE_SECTOR_SIZE"
 #endif /*  (FLASH_ITS_AREA_OFFSET % FLASH_AREA_IMAGE_SECTOR_SIZE) != 0 */

-#define FLASH_S_PARTITION_SIZE          (0x40000) /* 256 KB for S partition */
-#define FLASH_NS_PARTITION_SIZE         (0x80000) /* 512 KB for NS partition */
+#define FLASH_S_PARTITION_SIZE          (0x60000) /* 384 KB for S partition */
+#define FLASH_NS_PARTITION_SIZE         (0x60000) /* 384 KB for NS partition */

 #define FLASH_PARTITION_SIZE            (FLASH_S_PARTITION_SIZE+FLASH_NS_PARTITION_SIZE)

diff --git a/platform/ext/target/stm/common/stm32u5xx/Device/Source/gcc/tfm_common_s.ld b/platform/ext/target/stm/common/stm32u5xx/Device/Source/gcc/tfm_common_s.ld
index 82ea1c60..28b0e570 100644
--- a/toolchain_GNUARM.cmake
+++ b/toolchain_GNUARM.cmake
@@ -20,6 +20,10 @@ if(CMAKE_C_COMPILER STREQUAL "CMAKE_C_COMPILER-NOTFOUND")
     message(FATAL_ERROR "Could not find compiler: '${CROSS_COMPILE}-gcc'")
 endif()
 
+if(CMAKE_CXX_COMPILER STREQUAL "CMAKE_CXX_COMPILER-NOTFOUND")
+    message(FATAL_ERROR "Could not find compiler: '${CROSS_COMPILE}-g++'")
+endif()
+
 set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
 
 set(LINKER_VENEER_OUTPUT_FLAG -Wl,--cmse-implib,--out-implib=)
@@ -49,11 +53,15 @@ macro(tfm_toolchain_reset_compiler_flags)
         -funsigned-char
         -mthumb
         -nostdlib
-        -std=c99
+        $<$<COMPILE_LANGUAGE:C>:-std=c99>
         # Force DWARF version 4 for zephyr as pyelftools does not support version 5 at present
         -gdwarf-4
         $<$<OR:$<BOOL:${TFM_DEBUG_SYMBOLS}>,$<BOOL:${TFM_CODE_COVERAGE}>>:-g>
     )
+
+    add_compile_options(
+        $<$<COMPILE_LANGUAGE:CXX>:-std=c++11>
+    )
 endmacro()
 
 if(CONFIG_TFM_MEMORY_USAGE_QUIET)
@@ -141,6 +149,7 @@ macro(tfm_toolchain_reload_compiler)
     endif()
 
     unset(CMAKE_C_FLAGS_INIT)
+    unset(CMAKE_CXX_FLAGS_INIT)
     unset(CMAKE_ASM_FLAGS_INIT)
 
     if (DEFINED TFM_SYSTEM_PROCESSOR)
@@ -156,6 +165,7 @@ macro(tfm_toolchain_reload_compiler)
     endif()
 
     set(CMAKE_C_FLAGS ${CMAKE_C_FLAGS_INIT})
+    set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS_INIT})
     set(CMAKE_ASM_FLAGS ${CMAKE_ASM_FLAGS_INIT})
 
     set(BL2_COMPILER_CP_FLAG -mfloat-abi=soft)
